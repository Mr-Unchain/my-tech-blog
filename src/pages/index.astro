---
// src/pages/index.astro
import ArticleCard from "../components/ArticleCard.astro";
import HeroSlideshow from "../components/HeroSlideshow.astro"; // スライドショーをインポート
import Sidebar from "../components/Sidebar.astro";
import BaseLayout from "../layouts/BaseLayout.astro";
import { getBlogs, type Blog } from "../lib/microcms";
import { collection, getDocs, limit, orderBy, query } from "firebase/firestore";
import { db } from "../lib/firebase";

// ★★★ ヒーローセクションの人気記事取得ロジック ★★★
const viewsQuery = query(
  collection(db, "views"),
  orderBy("count", "desc"),
  limit(3)
);
const querySnapshot = await getDocs(viewsQuery);
const popularPostIds = querySnapshot.docs.map((doc) => doc.id);

let heroPosts: Blog[] = [];
if (popularPostIds.length > 0) {
  const filters = popularPostIds.map((id) => `id[equals]${id}`).join("[or]");
  const { contents: microCMSData } = await getBlogs({
    filters: filters,
  });
  // Firestoreの順序を維持
  heroPosts = popularPostIds
    .map((id) => microCMSData.find((post) => post.id === id))
    .filter((post): post is Blog => !!post);
}

// ★★★ 新しい記事一覧の取得ロジック ★★★
// すべての記事を新しい順に取得
const { contents: listPosts } = await getBlogs({ orders: "-publishedAt" });

const getCategoryColor = (categoryName: string) => {
  switch (categoryName) {
    case "ガジェット":
      return "sky";
    case "個人開発":
      return "purple";
    case "IT":
      return "pink";
    default:
      return "gray";
  }
};
---

<BaseLayout>
  <main class="container mx-auto px-4 py-8 md:py-12 max-w-6xl">
    {/* ★★★ ヒーローセクションをスライドショーに置き換え ★★★ */}
    {heroPosts.length > 0 && <HeroSlideshow posts={heroPosts} />}

    <div class="grid grid-cols-1 lg:grid-cols-3 gap-8 md:gap-12">
      <div class="lg:col-span-2">
        <!-- New Articles -->
        <section>
          <h2 class="text-2xl font-bold mb-6 text-custom-heading">
            新着記事
          </h2>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-8 items-stretch">
            {
              listPosts.map((post) => (
                <ArticleCard
                  id={post.id}
                  category={post.category}
                  title={post.title}
                  description={post.description}
                  date={
                    post.publishedAt
                      ? new Date(post.publishedAt).toLocaleDateString("ja-JP")
                      : ""
                  }
                  imageUrl={post.eyecatch.url + "?w=400"}
                  categoryColor={post.category.map(getCategoryColor)}
                />
              ))
            }
          </div>
          {/* ページネーション */}
          <div class="mt-12 flex justify-center">
            <nav class="flex items-center space-x-2">
              <a
                href="#"
                class="flex items-center justify-center h-10 w-10 bg-gray-800 border border-gray-700 text-gray-400 rounded-full hover:bg-gray-700 hover:text-white transition-colors"
                aria-label="前のページへ"
              >
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path></svg>
              </a>
              <span
                aria-current="page"
                class="flex items-center justify-center h-10 w-10 bg-blue-600 border border-blue-500 text-white font-bold rounded-full z-10"
              >
                1
              </span>
              <a
                href="#"
                class="flex items-center justify-center h-10 w-10 bg-gray-800 border border-gray-700 text-gray-300 rounded-full hover:bg-gray-700 hover:text-white transition-colors"
              >
                2
              </a>
              <a
                href="#"
                class="flex items-center justify-center h-10 w-10 bg-gray-800 border border-gray-700 text-gray-300 rounded-full hover:bg-gray-700 hover:text-white transition-colors"
              >
                3
              </a>
              <a
                href="#"
                class="flex items-center justify-center h-10 w-10 bg-gray-800 border border-gray-700 text-gray-400 rounded-full hover:bg-gray-700 hover:text-white transition-colors"
                aria-label="次のページへ"
              >
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path></svg>
              </a>
            </nav>
          </div>
        </section>
      </div>
      <Sidebar />
    </div>
  </main>
</BaseLayout>
