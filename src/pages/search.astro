---
// src/pages/search.astro
// このページを動的にレンダリングするようAstroに指示します
export const prerender = false;

import BaseLayout from "../layouts/BaseLayout.astro";
import Sidebar from "../components/Sidebar.astro";
import ArticleCard from "../components/ArticleCard.astro";
import { getBlogs } from "../lib/microcms";
import type { Blog } from "../lib/microcms";

// URLのクエリパラメータから検索キーワードを取得
const query = Astro.url.searchParams.get("q");

// microCMSの全文検索API(q)を使って記事を検索
const { contents: posts } = await getBlogs({
  q: query || "",
});

const getCategoryColor = (name: string) => {
  switch (name) {
    case "ガジェット":
      return "sky";
    case "ソフトウェア":
      return "purple";
    case "レビュー":
      return "pink";
    default:
      return "slate";
  }
};
---

<BaseLayout>
  <main class="container mx-auto px-4 py-8 md:py-12 max-w-6xl">
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-8 md:gap-12">
      <div class="lg:col-span-2">
        <h1 class="text-3xl font-bold mb-6 text-custom-heading">
          {query ? `「${query}」の検索結果: ${posts.length}件` : "検索ページ"}
        </h1>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
          {
            posts.length > 0
              ? posts.map((post: Blog) => (
                  <ArticleCard
                    id={post.id}
                    category={post.category}
                    title={post.title}
                    description={post.description}
                    date={
                      post.publishedAt
                        ? new Date(post.publishedAt).toLocaleDateString("ja-JP")
                        : ""
                    }
                    imageUrl={post.eyecatch.url + "?w=400"}
                    categoryColor={post.category.map(getCategoryColor)}
                  />
                ))
              : query && (
                  <p class="text-slate-500">
                    「{query}」に一致する記事は見つかりませんでした。
                  </p>
                )
          }
        </div>
      </div>
      <Sidebar />
    </div>
  </main>
</BaseLayout>
