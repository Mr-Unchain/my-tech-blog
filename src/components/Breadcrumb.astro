---
// src/components/Breadcrumb.astro
export interface BreadcrumbItem {
  name: string;
  href?: string;
}

export interface Props {
  items: BreadcrumbItem[];
  class?: string;
}

const { items, class: className = "" } = Astro.props;
---

<nav aria-label="パンくず" class={`breadcrumb ${className}`}>
  <ol class="flex items-center space-x-2 text-sm text-slate-400" itemscope itemtype="https://schema.org/BreadcrumbList">
    {items.map((item, index) => (
      <li 
        class="flex items-center"
        itemprop="itemListElement" 
        itemscope 
        itemtype="https://schema.org/ListItem"
      >
        {item.href ? (
          <a 
            href={item.href}
            class="text-slate-400 hover:text-cyan-400 transition-colors duration-200"
            itemprop="item"
          >
            <span itemprop="name">{item.name}</span>
          </a>
        ) : (
          <span class="text-slate-300 font-medium" itemprop="name">{item.name}</span>
        )}
        <meta itemprop="position" content={String(index + 1)} />
        
        {index < items.length - 1 && (
          <svg 
            class="w-4 h-4 mx-2 text-slate-600" 
            fill="none" 
            stroke="currentColor" 
            viewBox="0 0 24 24"
            aria-hidden="true"
          >
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
        )}
      </li>
    ))}
  </ol>
</nav>

<style>
  .breadcrumb {
    margin-bottom: 1rem;
  }
  
  @media (max-width: 768px) {
    .breadcrumb ol {
      font-size: 0.875rem;
    }
    
    .breadcrumb svg {
      width: 0.875rem;
      height: 0.875rem;
      margin: 0 0.375rem;
    }
  }
</style> 