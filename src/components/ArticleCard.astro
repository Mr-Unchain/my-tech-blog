---
// src/components/ArticleCard.astro
import { Image } from "astro:assets";

export interface Props {
  id: string;
  category: string | string[];
  title: string;
  description: string;
  date: string;
  imageUrl: string;
  imageUrlList?: string;
  class?: string;
}
const {
  id,
  category,
  title,
  description,
  date,
  imageUrl,
  imageUrlList,
  class: className,
} = Astro.props;

// 配列で受け取るように変換
const categories = Array.isArray(category) ? category : [category];

const MAX_CATEGORIES_TO_SHOW = 3;
const displayedCategories = categories.slice(0, MAX_CATEGORIES_TO_SHOW);
const hiddenCategoriesCount = categories.length - displayedCategories.length;
---

<a href={`/blog/${id}/`} class:list={["article-card group", className]}>
  <div class="article-card__image-container">
    <Image
      src={imageUrl}
      width={400}
      height={225}
      alt={`「${title}」の記事の画像`}
      class="article-card__image article-card__image--grid"
    />
    <Image
      src={imageUrlList ?? "/placeholder.svg"}
      width={256}
      height={144}
      alt={`「${title}」の記事の画像`}
      class="article-card__image article-card__image--list"
    />
  </div>
  <div class="article-card__content">
    <div class="article-card__categories">
      {displayedCategories.map((cat) => (
        <span class="article-card__category-badge">{cat}</span>
      ))}
      {hiddenCategoriesCount > 0 && (
        <span class="article-card__category-extra">
          +{hiddenCategoriesCount}
        </span>
      )}
    </div>
    <h3 class="article-card__title">{title}</h3>
    <p class="article-card__description">{description}</p>
    <time class="article-card__date">{date}</time>
  </div>
</a>
