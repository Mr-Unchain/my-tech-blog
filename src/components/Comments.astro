---
// src/components/Comments.astro
export interface Props {
  pageUrl: string;
  pageIdentifier: string;
  pageTitle: string;
}
const { pageUrl, pageIdentifier, pageTitle } = Astro.props;

const giscus = {
  repo: import.meta.env.VITE_GISCUS_REPO,
  repoId: import.meta.env.VITE_GISCUS_REPO_ID,
  category: import.meta.env.VITE_GISCUS_CATEGORY,
  categoryId: import.meta.env.VITE_GISCUS_CATEGORY_ID,
};

// あなたのDisqusのshortnameに書き換えてください
const disqusShortname = "shu-zhai-notetsukugia";
---

<div class="comments-container space-y-4">
  <div class="flex items-center gap-2">
    <h3 class="text-xl font-bold text-cyan-300">ディスカッション</h3>
    <span class="text-xs text-slate-400">（Giscus）</span>
  </div>
  <div
    id="giscus-container"
    data-repo={giscus.repo}
    data-repo-id={giscus.repoId}
    data-category={giscus.category}
    data-category-id={giscus.categoryId}
    class="rounded-xl border border-slate-700/50 bg-slate-800/40 backdrop-blur-sm p-2"
  >
  </div>

  <details class="group">
    <summary class="cursor-pointer select-none text-slate-300 hover:text-white transition-colors">
      うまく表示されない場合（クリックして再読み込み）
    </summary>
    <button id="reload-giscus" type="button" class="mt-2 px-3 py-1.5 text-sm rounded-lg bg-slate-700/70 border border-slate-600/60 text-slate-100 hover:bg-slate-700">再読み込み</button>
  </details>
</div>

<script>
  const createGiscus = () => {
    const container = document.getElementById("giscus-container");
    if (!container) return;

    // data-* 属性から設定を読み込む
    const { repo, repoId, category, categoryId } = container.dataset;

    if (!repo || !repoId || !category || !categoryId) {
      console.error("Giscus configuration is missing from data attributes.");
      return;
    }
    
    const giscusScript = document.createElement("script");
    giscusScript.src = "https://giscus.app/client.js";
    giscusScript.async = true;
    giscusScript.crossOrigin = "anonymous";
    
    // Giscusの設定をdata-*属性から設定
    giscusScript.setAttribute("data-repo", repo);
    giscusScript.setAttribute("data-repo-id", repoId);
    giscusScript.setAttribute("data-category", category);
    giscusScript.setAttribute("data-category-id", categoryId);
    
    giscusScript.setAttribute("data-mapping", "pathname");
    giscusScript.setAttribute("data-strict", "0");
    giscusScript.setAttribute("data-reactions-enabled", "1");
    giscusScript.setAttribute("data-emit-metadata", "0");
    giscusScript.setAttribute("data-input-position", "top");
    giscusScript.setAttribute("data-theme", "transparent_dark");
    giscusScript.setAttribute("data-lang", "ja");
    giscusScript.setAttribute("crossorigin", "anonymous");

    // 古いスクリプトがあれば削除
    while (container.firstChild) {
      container.removeChild(container.firstChild);
    }
    container.appendChild(giscusScript);
  };

  const manualReload = () => {
    createGiscus();
  };

  // Astroのページ読み込みイベントに処理を一本化
  document.addEventListener("astro:page-load", createGiscus);
  
  // Swupのページ遷移にも対応
  document.addEventListener("swup:contentReplaced", createGiscus);
  
  // 初回ページ読み込み時にも対応
  document.addEventListener("DOMContentLoaded", createGiscus);

  document.addEventListener('click', (e) => {
    const target = e.target as HTMLElement;
    if (target && target.id === 'reload-giscus') {
      manualReload();
    }
  });
</script>
